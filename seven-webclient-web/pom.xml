<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.cibseven</groupId>
		<artifactId>seven-webclient</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>seven-webclient-web</artifactId>
	<packaging>war</packaging>

	<properties>
		<jib.from.image>${image.tomcat-10-base}</jib.from.image>
		<jib.to.image>harbor.cib.de/dev/seven-webclient:${project.version}</jib.to.image>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.cibseven</groupId>
			<artifactId>seven-webclient-webjar</artifactId>
			<version>${project.version}</version>
		</dependency>
	    <dependency>
	        <groupId>de.cib.cibflow</groupId>
	        <artifactId>flow-common-frontend-jar</artifactId>
			<version>1.1.0-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>vuex</artifactId>
				</exclusion>
			</exclusions>			
	    </dependency>
	     <dependency>
		    <groupId>org.webjars.npm</groupId>
		    <artifactId>vue</artifactId>
		    <version>3.5.13</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.npm</groupId>
		    <artifactId>vuex</artifactId>
		    <version>4.1.0</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.npm</groupId>
		    <artifactId>vue-router</artifactId>
		    <version>4.5.0</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.npm</groupId>
		    <artifactId>vue-i18n</artifactId>
		    <version>9.14.0</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars.npm</groupId>
		    <artifactId>mitt</artifactId>
		    <version>3.0.1</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>zxcvbn</artifactId>
		    <version>4.4.2</version>
		</dependency>
	   	<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>momentjs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>de.cib.cibflow</groupId>
			<artifactId>flow-cloud-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.swagger.core.v3</groupId>
					<artifactId>swagger-annotations-jakarta</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Without this, any controller method with parameters annotated with some jakarta.validation.* annotations, 
		such as jakarta.validation.constraints.NotNull, throws the described exception. 
		The exception is thrown by Spring and the method is not even called at all. -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-validation</artifactId>
		</dependency>		
	</dependencies>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env>local</env>
			</properties>

			<build>
				<filters>
					<filter>src/main/resources/env/application.${env}.properties</filter>
				</filters>

				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>application.yaml</include>
						</includes>
					</resource>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
						<includes>
							<include>cibflow-webclient.yaml</include>
							<include>*.jpg</include>
							<include>*.xml</include>
							<include>*.txt</include>
						</includes>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<!-- Filter application.properties to put inside the
						WEB-INF/classes directory. Uses
						env property for correct filter -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>cibflow-web-copy-resources</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<outputDirectory>
										${project.basedir}/src/main/webapp</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<filtering>true</filtering>
											<includes>
												<include>*.json</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Attach .zip archive with application.properties for each
			environment to
			cibflow-webclient-web artifact -->
			<id>deploy</id>
			<properties>
				<!-- Deploy to Nexus with application.release.properties in
				cibflow-webclient-web
				module -->
				<!-- Deployment to dev, test, etc. works by having Jenkins use
				the .zip generated by
				antrun in cibflow-webclient-web pom -->
				<env>release</env>
				<env.configs.dir>env-configs</env.configs.dir>
				<env.configs.classifier>${env.configs.dir}</env.configs.classifier>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-env-configs</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<property name="dollar.symbol" value="$" />
										<macrodef name="copyFilteredConfigFiles">
											<attribute name="env" />
											<sequential>
												<copy file="${project.basedir}/src/main/resources/application.yaml" toFile="${project.basedir}/target/antrun/${env.configs.dir}/application.@{env}.yaml">
													<filterset begintoken="${dollar.symbol}{" endtoken="}">
														<filtersfile file="${project.basedir}/src/main/resources/env/application.@{env}.properties" />
													</filterset>
												</copy>
												<copy file="${project.basedir}/src/main/resources/config.json" toFile="${project.basedir}/target/antrun/${env.configs.dir}/config.@{env}.json">
													<filterset begintoken="${dollar.symbol}{" endtoken="}">
														<filtersfile file="${project.basedir}/src/main/resources/env/application.@{env}.properties" />
													</filterset>
												</copy>
											</sequential>
										</macrodef>
										<copyFilteredConfigFiles env="local" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>attach-env-configs</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<zip destfile="${project.basedir}/target/antrun/${env.configs.dir}.zip" basedir="${project.basedir}/target/antrun/${env.configs.dir}" />
										<delete dir="${project.basedir}/target/antrun/${env.configs.dir}" />
										<attachartifact file="${project.basedir}/target/antrun/${env.configs.dir}.zip" classifier="${env.configs.classifier}" type="zip" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploy-k8s</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
						<includes>
							<include>*.jpg</include>
							<include>*.txt</include>
						</includes>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- Index.html contain projectVersion variable which needs to be
			replace by the current version of the project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>replace-data-banner</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>
								${project.basedir}/src/main/resources</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/banner</directory>
									<filtering>true</filtering>
									<includes>
										<include>banner.txt</include>
									</includes>
									<targetPath>.</targetPath>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<dependentWarExcludes>META-INF/*.SF, META-INF/*.DSA,
						META-INF/*.RSA</dependentWarExcludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<configuration>
					<skip>false</skip>
					<container>
						<appRoot>/opt/bitnami/tomcat/webapps/seven</appRoot>
					</container>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${version.spring.boot}</version>
				<configuration>
					<fork>true</fork>
					<mainClass>org.cibseven.Application</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
							<!-- Build info for actuator info endpoint-->
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>